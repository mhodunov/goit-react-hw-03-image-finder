{"version":3,"sources":["components/Searchbar.js","components/ImageGalleryItem.js","components/ImageGallery.js","components/Button.js","components/Modal.js","api/pixabayApi.js","App.js","index.js"],"names":["Searchbar","state","value","handleInputChange","event","currentTarget","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","className","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","id","src","alt","largeImageUrl","onClick","data-source","ImageGallery","images","map","webformatURL","largeImageURL","tags","Button","onLoadMore","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","fetchImages","query","page","perPage","axios","get","then","response","data","hits","App","isLoading","selectedImg","showModal","newQuery","error","getImages","options","prevState","scrollTo","top","documentElement","scrollHeight","behavior","catch","finally","setLargeImg","url","toggleModal","prevProps","color","height","width","_","isEmpty","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f297305f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Searchbar extends Component {\r\n\r\n  state = { value: '' };\r\n\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  handleInputChange = event => {\r\n    const { value } = event.currentTarget;\r\n\r\n    this.setState({\r\n      value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const { value } = this.state;\r\n\r\n    value && this.props.onSubmit(value);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ value: '' });\r\n  };\r\n  \r\n  \r\n  render() {\r\n  const { value } = this.state;\r\n  \r\n  return (\r\n  <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={value}\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </form>\r\n      </header>\r\n  )}\r\n}\r\n\r\nexport default Searchbar;","import React from \"react\";\r\n\r\nconst ImageGalleryItem = ({ id, src, alt, largeImageUrl, onClick }) => {\r\n\r\n    return (\r\n      <li\r\n        className=\"ImageGalleryItem\"\r\n        key = {id}\r\n      >\r\n        <img\r\n          onClick={onClick}\r\n          src={src}\r\n          alt={alt}\r\n          className=\"ImageGalleryItem-image\"\r\n          data-source={largeImageUrl}\r\n        />\r\n      </li>\r\n    );\r\n  }\r\n\r\nexport default ImageGalleryItem;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport ImageGalleryItem from './ImageGalleryItem.js';\r\n\r\nconst ImageGallery = ({images, onClick}) => {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {images.map(({ id, webformatURL, largeImageURL, tags }) => {\r\n        return (\r\n          <ImageGalleryItem\r\n            key={id}\r\n            src={webformatURL}\r\n            alt={tags}\r\n            largeImageURL={largeImageURL}\r\n            onClick={() => onClick(largeImageURL)}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  )\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  hits: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      webformatURL: PropTypes.string.isRequired,\r\n      largeImageURL: PropTypes.string.isRequired,\r\n      tags: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = ({ onLoadMore }) => {\r\n  return (\r\n    <button type=\"button\" className=\"Button\" onClick={onLoadMore}>\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  onLoadMore: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal\">\r\n          <img src={this.props.src} alt=\"\" />\r\n        </div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  url: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Modal;","import axios from 'axios';\r\n\r\nconst API_KEY = \"19973159-db573a6c5a26f25e5ce8b6bb0\";\r\n\r\n// Function to fetch images with query. Returns an array of result objects\r\nfunction fetchImages({ query = '', page = 1, perPage = 12 }) {\r\n  return axios\r\n    .get(\r\n      `https://pixabay.com/api/?q=${query}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=${perPage}`,\r\n    )\r\n    .then(response => response.data.hits);\r\n}\r\n\r\nexport { fetchImages };","import React, { Component } from 'react';\n\nimport Searchbar from './components/Searchbar.js';\nimport ImageGallery from './components/ImageGallery.js';\nimport Button from './components/Button.js';\nimport Modal from './components/Modal.js';\n\nimport Loader from 'react-loader-spinner';\nimport _ from 'lodash';\n\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport \"./index.scss\";\n\nimport { fetchImages } from './api/pixabayApi.js';\nclass App extends Component {\n  state = {\n    images: [],\n    query: '',\n    page: 1,\n    isLoading: false,\n    selectedImg: '',\n    showModal: false,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.query !== this.state.query) {\n      this.getImages();\n    }\n  }\n\n  handleSubmit = newQuery => {\n    this.setState({\n      images: [],\n      query: newQuery,\n      page: 1,\n      error: null,\n      selectedImg: '',\n      showModal: false,\n    });\n  };\n\n  getImages = () => {\n    const { query, page } = this.state;\n\n    const options = {\n      query,\n      page,\n    };\n\n    this.setState({ isLoading: true });\n\n    fetchImages(options)\n      .then(images => {\n        this.setState(prevState => ({\n          images: [...prevState.images, ...images],\n          page: prevState.page + 1,\n        }));\n\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        });\n      })\n      .catch(error => {\n        this.setState({ error });\n      })\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  setLargeImg = url => {\n    this.setState({ selectedImg: url });\n    this.toggleModal();\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  render() {\n    const { images, isLoading, showModal, selectedImg } = this.state;\n\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={this.handleSubmit} />\n          <ImageGallery\n            images = {images}\n            onClick = {this.setLargeImg}\n          />\n          {isLoading && (\n            <Loader\n              type=\"TailSpin\"\n              color=\"#00BFFF\"\n              height={80}\n              width={80}\n              className=\"loader\"\n            />\n          )}\n        {!_.isEmpty(images) && !isLoading && (\n          <Button onLoadMore={this.getImages} />\n        )}\n        {showModal && (\n          <Modal src={this.state.selectedImg} onClose={this.toggleModal} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}